const e=JSON.parse('{"key":"v-928d50ee","path":"/03-framework/springcloud/","title":"SpringCloud实战","lang":"zh-CN","frontmatter":{"dir":{"link":true},"description":"学习的思路：一种新的技术的产生或一种新的架构思路的产生，一定是过去的旧事物无法满足现有问题的解决，或者是一定是原有的旧事物有些问题需要解决。因此，在学习新技术的时候，这种思想就可以作为一种指导思想。 1. 微服务 1.1. 什么是微服务 1. 2014 年 Martin Fowler 提出的一种新的架构形式。微服务架构是一种架构模式，提倡将单一应用程序...","head":[["meta",{"property":"og:url","content":"https://vongdefu.github.io/03-framework/springcloud/"}],["meta",{"property":"og:site_name","content":"cs-tips"}],["meta",{"property":"og:title","content":"SpringCloud实战"}],["meta",{"property":"og:description","content":"学习的思路：一种新的技术的产生或一种新的架构思路的产生，一定是过去的旧事物无法满足现有问题的解决，或者是一定是原有的旧事物有些问题需要解决。因此，在学习新技术的时候，这种思想就可以作为一种指导思想。 1. 微服务 1.1. 什么是微服务 1. 2014 年 Martin Fowler 提出的一种新的架构形式。微服务架构是一种架构模式，提倡将单一应用程序..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://vongdefu.github.io/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"SpringCloud实战"}],["meta",{"property":"article:author","content":"vongdefu"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"SpringCloud实战\\",\\"image\\":[\\"https://vongdefu.github.io/\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"vongdefu\\",\\"url\\":\\"https://github.com/vongdefu\\"}]}"]]},"headers":[{"level":2,"title":"1. 微服务","slug":"_1-微服务","link":"#_1-微服务","children":[{"level":3,"title":"1.1. 什么是微服务","slug":"_1-1-什么是微服务","link":"#_1-1-什么是微服务","children":[]},{"level":3,"title":"1.2. 微服务解决了哪些问题？","slug":"_1-2-微服务解决了哪些问题","link":"#_1-2-微服务解决了哪些问题","children":[]},{"level":3,"title":"1.3. 主流的微服务框架","slug":"_1-3-主流的微服务框架","link":"#_1-3-主流的微服务框架","children":[]},{"level":3,"title":"1.4. SpringCloud 有哪些核心组件？","slug":"_1-4-springcloud-有哪些核心组件","link":"#_1-4-springcloud-有哪些核心组件","children":[]}]},{"level":2,"title":"2. 说明","slug":"_2-说明","link":"#_2-说明","children":[]},{"level":2,"title":"3. 微服务架构概述","slug":"_3-微服务架构概述","link":"#_3-微服务架构概述","children":[]},{"level":2,"title":"4. SpringCloud与中间件","slug":"_4-springcloud与中间件","link":"#_4-springcloud与中间件","children":[{"level":3,"title":"4.1. 中间件概述","slug":"_4-1-中间件概述","link":"#_4-1-中间件概述","children":[]},{"level":3,"title":"4.2. SpringCloud概述","slug":"_4-2-springcloud概述","link":"#_4-2-springcloud概述","children":[]},{"level":3,"title":"4.3. SpringCloud与服务治理中间件","slug":"_4-3-springcloud与服务治理中间件","link":"#_4-3-springcloud与服务治理中间件","children":[]},{"level":3,"title":"4.4. SpringCloud与配置中心中间件","slug":"_4-4-springcloud与配置中心中间件","link":"#_4-4-springcloud与配置中心中间件","children":[]},{"level":3,"title":"4.5. SpringCloud与网关中间件","slug":"_4-5-springcloud与网关中间件","link":"#_4-5-springcloud与网关中间件","children":[]},{"level":3,"title":"4.6. SpringCloud与全链路监控中间件","slug":"_4-6-springcloud与全链路监控中间件","link":"#_4-6-springcloud与全链路监控中间件","children":[]}]},{"level":2,"title":"5. SpringCloud增强生态","slug":"_5-springcloud增强生态","link":"#_5-springcloud增强生态","children":[]},{"level":2,"title":"文章列表","slug":"文章列表","link":"#文章列表","children":[]},{"level":2,"title":"17. 如何设计一个安全可靠的API接口","slug":"_17-如何设计一个安全可靠的api接口","link":"#_17-如何设计一个安全可靠的api接口","children":[]},{"level":2,"title":"18. 文章列表","slug":"_18-文章列表","link":"#_18-文章列表","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":13.2,"words":3961},"filePathRelative":"03-framework/springcloud/README.md","autoDesc":true,"excerpt":""}');export{e as data};
