const e=JSON.parse('{"key":"v-11a13bfb","path":"/02-java/jvm/ch05-runtime.html","title":"5. 运行时内存结构","lang":"zh-CN","frontmatter":{"description":"研究思路： 1. 为什么要把运行期内存结构划分为线程私有区域和线程共享区域？根据 JMM 模型。 1. 查看运行期内存结构 一般情况下，需要对内存 dump 下来一个某一时刻的快照信息，然后在这个快照上进行分析。 2. 线程私有区域【生命周期与线程生命周期一致】 **./ch05-runtime/image/1700039595077.jpeg; 每当...","head":[["meta",{"property":"og:url","content":"https://vongdefu.github.io/02-java/jvm/ch05-runtime.html"}],["meta",{"property":"og:site_name","content":"cs-tips"}],["meta",{"property":"og:title","content":"5. 运行时内存结构"}],["meta",{"property":"og:description","content":"研究思路： 1. 为什么要把运行期内存结构划分为线程私有区域和线程共享区域？根据 JMM 模型。 1. 查看运行期内存结构 一般情况下，需要对内存 dump 下来一个某一时刻的快照信息，然后在这个快照上进行分析。 2. 线程私有区域【生命周期与线程生命周期一致】 **./ch05-runtime/image/1700039595077.jpeg; 每当..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://vongdefu.github.io/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"5. 运行时内存结构"}],["meta",{"property":"article:author","content":"vongdefu"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"5. 运行时内存结构\\",\\"image\\":[\\"https://vongdefu.github.io/\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"vongdefu\\",\\"url\\":\\"https://github.com/vongdefu\\"}]}"]]},"headers":[{"level":3,"title":"1. 查看运行期内存结构","slug":"_1-查看运行期内存结构","link":"#_1-查看运行期内存结构","children":[]},{"level":3,"title":"2. 线程私有区域【生命周期与线程生命周期一致】","slug":"_2-线程私有区域【生命周期与线程生命周期一致】","link":"#_2-线程私有区域【生命周期与线程生命周期一致】","children":[]},{"level":3,"title":"3. 线程共享区域【生命周期与jvm的生命周期一致】","slug":"_3-线程共享区域【生命周期与jvm的生命周期一致】","link":"#_3-线程共享区域【生命周期与jvm的生命周期一致】","children":[]},{"level":3,"title":"4. 直接内存区域","slug":"_4-直接内存区域","link":"#_4-直接内存区域","children":[]},{"level":3,"title":"5. 研究方法","slug":"_5-研究方法","link":"#_5-研究方法","children":[]},{"level":3,"title":"6. 代码中实例化对象的方式","slug":"_6-代码中实例化对象的方式","link":"#_6-代码中实例化对象的方式","children":[]},{"level":3,"title":"7. 对象的内存结构","slug":"_7-对象的内存结构","link":"#_7-对象的内存结构","children":[]},{"level":3,"title":"8. 对象的内存分布","slug":"_8-对象的内存分布","link":"#_8-对象的内存分布","children":[]},{"level":3,"title":"9. 对象的创建过程","slug":"_9-对象的创建过程","link":"#_9-对象的创建过程","children":[]},{"level":3,"title":"10. 对象的访问定位过程","slug":"_10-对象的访问定位过程","link":"#_10-对象的访问定位过程","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":15.72,"words":4717},"filePathRelative":"02-java/jvm/ch05-runtime.md","autoDesc":true,"excerpt":""}');export{e as data};
