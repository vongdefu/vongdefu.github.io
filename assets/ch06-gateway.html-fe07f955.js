import{_ as p,W as c,X as o,Y as n,Z as s,$ as t,a0 as e,C as l}from"./framework-16b96b76.js";const i="/assets/1699933274421-0a27a6f7.png",u="/assets/1699933274532-3b14f3e4.png",r="/assets/1699933274639-8b343a55.png",d="/assets/1699933274724-fa7c346c.png",k="/assets/1699933274803-f5d511c3.png",v={},g=e('<h1 id="_6-gateway分布式网关" tabindex="-1"><a class="header-anchor" href="#_6-gateway分布式网关" aria-hidden="true">#</a> 6. gateway分布式网关</h1><h3 id="_1-背景知识" tabindex="-1"><a class="header-anchor" href="#_1-背景知识" aria-hidden="true">#</a> 1. 背景知识</h3><p>我们知道，假如一个组织内，有3个微服务，并且微服务与微服务之间可以相互调用，那么调用关系就有8种，此时我们需要在每一个微服务中配置好另外其他所有的微服务的信息，假设其中某一个服务的信息需要修改呢？再假设每一个服务都需要对其他服务调用接口时进行身份认证和权限校验呢？事实上，人们正是因为在实际的开发过程中遇到了上述的那些问题，所以才开发出了网关组件。</p><h3 id="_2-网关的必要性" tabindex="-1"><a class="header-anchor" href="#_2-网关的必要性" aria-hidden="true">#</a> 2. 网关的必要性</h3><figure><img src="'+i+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>上面是一个互联网应用典型的部署视图，从上面我们可以看到，一般情况下，我们会把应用部署划分成几个网络区域：</p><ul><li><code>互联网</code>： 所有用户和应用都可以访问的网络区域</li><li><code>外联网关</code>： 是同属于一个企业内所有组织的所有应用的出口。</li><li><code>内联网关</code>： 是同属于一个组织内的所有应用对外的出口。</li><li><code>HOST ZONE</code>： 应用服务区域，也就是我们常说的后端服务所部署的区域。在组织架构中，它属于单个组织架构，在应用中，它属于同一个应用。</li></ul><p>需要注意的是，外联网关、內联网关和HOST ZONE区域，是层层嵌套的，内联网关包含HOST ZONE，外联网关又包含内联网关。例如，在一个企业内有成百上千的微服务应用，每个业务团队负责不同的微服务应用，那么内联网关的作用就是用来隔<code>离每个业务团队的不同微服务之间的网络通信</code>；而外联网关的作用就是把<code>企业内的所有业务团队所负责的微服务</code>与<code>企业外部的用户或者业务相关的其他企业的应用</code>进行隔离.</p><p>微服务架构中，网关服务是独立存在的，它也称为逻辑网关，与SLB/Nginx/OpenResty的物理网关在部署形式上是不同的，网关服务的存在形式是一个独立的微服务，一般是需要进行代码的定制化开发的，而SLB/Nginx/OpenResty的物理网关的存在形式可能是n台独立的服务器（一般情况下是具有高性能的网络通信能力的服务器），也有可能是具有高性能网关硬件的虚拟服务器。</p><p>内联网关除了具备最基本的网络隔离功能外，一般还具备：</p><ol><li>身份认证、鉴权：为下游服务发送来的请求提供身份认证及相关鉴权功能。</li><li>限流、熔断、降级、流量监控：保护上游提供响应的服务及监控上游各个微服务的健康状况。</li><li>协议转换：由于上游各个微服务所使用的通信协议有可能不同，因此网关还承担着协议转换的功能。</li><li>......</li></ol><h3 id="_3-技术选型" tabindex="-1"><a class="header-anchor" href="#_3-技术选型" aria-hidden="true">#</a> 3. 技术选型</h3>',12),m={href:"https://mp.weixin.qq.com/s/AUHY3nKZqDbAhkfebOPWCg",target:"_blank",rel:"noopener noreferrer"},b=e(`<h3 id="_4-spring-cloud-gateway" tabindex="-1"><a class="header-anchor" href="#_4-spring-cloud-gateway" aria-hidden="true">#</a> 4. Spring Cloud Gateway</h3><h4 id="_4-1-版本关系" tabindex="-1"><a class="header-anchor" href="#_4-1-版本关系" aria-hidden="true">#</a> 4.1. 版本关系</h4><p>由于我们已经规定了SpringCloud及SpringCloud-Alibaba的版本，因此我们直接在pom文件中引入Gateway的坐标，不需要带版本号，SpringCloud及SpringCloud-Alibaba会自动帮我们选择版本号。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&lt;dependency&gt;
    &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;
    &lt;artifactId&gt;spring-cloud-starter-gateway&lt;/artifactId&gt;
&lt;/dependency&gt;

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-2-相关概念" tabindex="-1"><a class="header-anchor" href="#_4-2-相关概念" aria-hidden="true">#</a> 4.2. 相关概念</h4><ul><li>路由： 是由ID、目标URI、断言集合和过滤器集合构成，表示如果实际请求的路由满足断言集合的条件，就执行过滤器集合规定的相关动作；</li><li>断言： 就是对应的路由判断条件；</li><li>过滤器： 满足断言后执行的动作；</li></ul><p>需要注意的是：断言和过滤器都是一个集合，由二者组成的路由也是一个集合。</p><h3 id="_5-框架搭建" tabindex="-1"><a class="header-anchor" href="#_5-框架搭建" aria-hidden="true">#</a> 5. 框架搭建</h3><blockquote><p>微信扫码关注“天晴小猪”（ID： it-come-true），回复“springcloud”，获取本章节实战源码。</p></blockquote><p>搭建网关工程很简单，使用spring initial 工具生成工程代码后，引入gateway依赖，再添加配置文件和启动类即可，引入的依赖如下：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&lt;dependency&gt;
    &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;
    &lt;artifactId&gt;spring-cloud-starter-gateway&lt;/artifactId&gt;
&lt;/dependency&gt;

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-实战" tabindex="-1"><a class="header-anchor" href="#_6-实战" aria-hidden="true">#</a> 6. 实战</h3><p>下面根据不同的使用场景来分别进行实践操作。</p><h4 id="_6-1-请求转发" tabindex="-1"><a class="header-anchor" href="#_6-1-请求转发" aria-hidden="true">#</a> 6.1. 请求转发</h4><p>假如有一个业务场景，要求所有带了 &quot;green&quot; 参数的路由都转发到百度网站。实践过程如下：</p><ul><li>配置文件中添加路由</li></ul><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">spring</span><span class="token punctuation">:</span>
  <span class="token key atrule">cloud</span><span class="token punctuation">:</span>
    <span class="token key atrule">gateway</span><span class="token punctuation">:</span>
      <span class="token key atrule">routes</span><span class="token punctuation">:</span>
        <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> query_router <span class="token comment"># 路由规则的名称，可以自定义</span>
          <span class="token key atrule">predicates</span><span class="token punctuation">:</span> <span class="token comment"># 断言</span>
            <span class="token punctuation">-</span> Query=green <span class="token comment"># 参数</span>
          <span class="token key atrule">uri</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//baidu.com <span class="token comment"># 执行跳转的URI</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>测试</li></ul>`,18),y={href:"http://localhost:15000?green",target:"_blank",rel:"noopener noreferrer"},h=e('<figure><img src="'+u+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_6-2-重写路由" tabindex="-1"><a class="header-anchor" href="#_6-2-重写路由" aria-hidden="true">#</a> 6.2. 重写路由</h4><p>假设有一个业务场景，要求所有 <code>/test</code> 下的请求，都转发到provider服务的对应请求，如网关的 <code>/test/hello</code>就需要转发到<code>provider</code>服务的 <code>/providerbygateway/hello</code>。由于需要转发给对应的provider微服务，因此还需要把网关服务注册到注册中心，同样的provider服务也需要注册到注册中心，实践过程如下：</p><ul><li>网关服务添加nacos注册中心的依赖</li></ul><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.alibaba.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-starter-alibaba-nacos-discovery<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>配置文件中配置nacos注册中心的地址</li></ul><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">spring</span><span class="token punctuation">:</span>
  <span class="token key atrule">application</span><span class="token punctuation">:</span>
    <span class="token key atrule">name</span><span class="token punctuation">:</span> gateway<span class="token punctuation">-</span>demo
  <span class="token key atrule">cloud</span><span class="token punctuation">:</span>
    <span class="token key atrule">nacos</span><span class="token punctuation">:</span>
      <span class="token key atrule">discovery</span><span class="token punctuation">:</span>
        <span class="token key atrule">server-addr</span><span class="token punctuation">:</span> 192.168.1.150<span class="token punctuation">:</span><span class="token number">8848</span>
        <span class="token key atrule">namespace</span><span class="token punctuation">:</span> deeaeca6<span class="token punctuation">-</span>bed9<span class="token punctuation">-</span>4fb1<span class="token punctuation">-</span>b5b7<span class="token punctuation">-</span>9c79278561ca

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>启动类上添加注册发现的开关注解</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@EnableDiscoveryClient</span>  <span class="token comment">// 添加服务注册与发现的注解</span>
<span class="token annotation punctuation">@SpringBootApplication</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GatewayDemoApplication</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">GatewayDemoApplication</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>在网关的配置文件添加路由规则</li></ul><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">spring</span><span class="token punctuation">:</span>
  <span class="token key atrule">cloud</span><span class="token punctuation">:</span>
    <span class="token key atrule">gateway</span><span class="token punctuation">:</span>
      <span class="token key atrule">routes</span><span class="token punctuation">:</span>
        <span class="token comment"># provider</span>
        <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> provider_router
          <span class="token key atrule">predicates</span><span class="token punctuation">:</span>
            <span class="token punctuation">-</span> Path=/test/<span class="token important">**</span>
          <span class="token key atrule">filters</span><span class="token punctuation">:</span>
            <span class="token punctuation">-</span> RewritePath=/test/(<span class="token punctuation">?</span>&lt;segment<span class="token punctuation">&gt;</span>.<span class="token important">*)</span><span class="token punctuation">,</span>/providerbygateway/$\\<span class="token punctuation">{</span>segment<span class="token punctuation">}</span> 
          <span class="token key atrule">uri</span><span class="token punctuation">:</span> lb<span class="token punctuation">:</span>//nacos<span class="token punctuation">-</span>provider

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>根据官方文档， filters 的配置项中重写路径 RewritePath 的的值有两部分，第一部分 /test/ 后面的 <code>(?&lt;segment&gt;.*)</code>  表示任意一段请求路径，第二部分后面的 <code>$\\{segment}</code> 表示与第一部分一样的一段请求路径。 uri 配置项中的 lb 表示转发到的服务使用负载均衡。</p><ul><li>在nacos-provider中添加转发的目的接口</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@RestController</span>
<span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;providerbygateway&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GatewayController</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/hello&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;hello, provider!!!&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>启动两个服务，进行测试</li></ul><figure><img src="`+r+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_6-3-其他基础功能" tabindex="-1"><a class="header-anchor" href="#_6-3-其他基础功能" aria-hidden="true">#</a> 6.3. 其他基础功能</h4><p>由上面两个实战示例可以看出，网关的开发很简单，只需要在配置文件中配置上路由、断言和过滤器即可，几乎不需要有其他额外的代码。</p>',18),f={href:"https://docs.spring.io/spring-cloud-gateway/docs/2.2.x/reference/html/#gateway-request-predicates-factories",target:"_blank",rel:"noopener noreferrer"},w=e(`<h4 id="_6-4-路由规则可配置化" tabindex="-1"><a class="header-anchor" href="#_6-4-路由规则可配置化" aria-hidden="true">#</a> 6.4. 路由规则可配置化</h4><p>上述的两种方式都是把路由写到application.yml中，即然我们已经学习过nacos作为配置中心，何不利用起来呢？我们的目标是：让路由规则可配置化，下面我们进行实践操作。</p><ul><li>在gateway-demo模块的pom文件中添加nacos的配置依赖</li></ul><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.alibaba.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-starter-alibaba-nacos-config<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>把application.yml文件修改成bootstrap.yml，并配置config项</li></ul><p>我们使用nacos的共享配置文件的方式进行配置。</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">spring</span><span class="token punctuation">:</span>
  <span class="token key atrule">application</span><span class="token punctuation">:</span>
    <span class="token key atrule">name</span><span class="token punctuation">:</span> gateway<span class="token punctuation">-</span>demo
  <span class="token key atrule">cloud</span><span class="token punctuation">:</span>
    <span class="token key atrule">nacos</span><span class="token punctuation">:</span>
      <span class="token key atrule">config</span><span class="token punctuation">:</span>
        <span class="token key atrule">server-addr</span><span class="token punctuation">:</span> 192.168.1.150<span class="token punctuation">:</span><span class="token number">8848</span>
        <span class="token key atrule">namespace</span><span class="token punctuation">:</span> deeaeca6<span class="token punctuation">-</span>bed9<span class="token punctuation">-</span>4fb1<span class="token punctuation">-</span>b5b7<span class="token punctuation">-</span>9c79278561ca
        <span class="token key atrule">file-extension</span><span class="token punctuation">:</span> yaml
        <span class="token key atrule">shared-configs</span><span class="token punctuation">:</span>

          <span class="token comment"># 日志</span>
          <span class="token punctuation">-</span> <span class="token key atrule">dataId</span><span class="token punctuation">:</span> log.yml
            <span class="token key atrule">refresh</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
            <span class="token key atrule">group</span><span class="token punctuation">:</span> COMMON

          <span class="token comment"># 路由规则</span>
          <span class="token punctuation">-</span> <span class="token key atrule">dataId</span><span class="token punctuation">:</span> routerule.yml
            <span class="token key atrule">refresh</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
            <span class="token key atrule">group</span><span class="token punctuation">:</span> GATEWAY

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>在nacos的控制台配置上路由规则</li></ul><figure><img src="`+d+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>重新启动，测试运行结果</li></ul><p>成功，无异常。</p><h4 id="_6-5-集成swagger" tabindex="-1"><a class="header-anchor" href="#_6-5-集成swagger" aria-hidden="true">#</a> 6.5. 集成swagger</h4><p>在微服务框架中，由于会有很多个微服务，每一个微服务都有自己的一组API，虽然Spring团队为我们提供了每一个微服务自己的API展示组件——swagger，我们在使用时，只需要找到不同服务的ip和端口即可，但是在实际的开发场景中，我们希望网关上游的所有微服务的API能够聚合到一起。这样我们就需要记住网关的服务地址即可。</p>',13),_={href:"https://doc.xiaominfo.com/docs/action/springcloud-gateway",target:"_blank",rel:"noopener noreferrer"},x=e(`<blockquote><p>微信扫码关注“天晴小猪”（ID： it-come-true），回复“springcloud”，获取本章节实战源码。</p></blockquote><ul><li>创建gateway-swagger模块</li></ul><p>pom.xml引入gateway、alibaba-nacos-discovery、knife4j-spring-boot-starter三个依赖：</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-starter-gateway<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.alibaba.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-starter-alibaba-nacos-discovery<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.github.xiaoymin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>knife4j-spring-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.0.4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>application.yml中主要配置nacos的服务发现地址及网关的路由规则：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">server</span><span class="token punctuation">:</span>
  <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">10800</span>
<span class="token key atrule">spring</span><span class="token punctuation">:</span>
  <span class="token key atrule">application</span><span class="token punctuation">:</span>
    <span class="token key atrule">name</span><span class="token punctuation">:</span> gateway<span class="token punctuation">-</span>swagger
  <span class="token key atrule">cloud</span><span class="token punctuation">:</span>
    <span class="token key atrule">nacos</span><span class="token punctuation">:</span>
      <span class="token key atrule">discovery</span><span class="token punctuation">:</span>
        <span class="token key atrule">server-addr</span><span class="token punctuation">:</span> 192.168.1.150<span class="token punctuation">:</span><span class="token number">8848</span>
    <span class="token key atrule">gateway</span><span class="token punctuation">:</span>
      <span class="token key atrule">routes</span><span class="token punctuation">:</span> <span class="token comment">#配置路由路径</span>
        <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> user<span class="token punctuation">-</span>service
          <span class="token key atrule">uri</span><span class="token punctuation">:</span> lb<span class="token punctuation">:</span>//swagger<span class="token punctuation">-</span>user
          <span class="token key atrule">predicates</span><span class="token punctuation">:</span>
            <span class="token punctuation">-</span> Path=/swagger<span class="token punctuation">-</span>user/<span class="token important">**</span>
          <span class="token key atrule">filters</span><span class="token punctuation">:</span>
            <span class="token punctuation">-</span> StripPrefix=1
        <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> order<span class="token punctuation">-</span>service
          <span class="token key atrule">uri</span><span class="token punctuation">:</span> lb<span class="token punctuation">:</span>//swagger<span class="token punctuation">-</span>order
          <span class="token key atrule">predicates</span><span class="token punctuation">:</span>
            <span class="token punctuation">-</span> Path=/swagger<span class="token punctuation">-</span>order/<span class="token important">**</span>
          <span class="token key atrule">filters</span><span class="token punctuation">:</span>
            <span class="token punctuation">-</span> StripPrefix=1
      <span class="token key atrule">discovery</span><span class="token punctuation">:</span>
        <span class="token key atrule">locator</span><span class="token punctuation">:</span>
          <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment">#开启从注册中心动态创建路由的功能</span>
          <span class="token key atrule">lower-case-service-id</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment">#使用小写服务名，默认是大写</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>启动类上添加服务注册与发现的注解 <code>@EnableDiscoveryClient</code> 。</p><p>添加swagger信息的资源配置：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Slf4j</span>
<span class="token annotation punctuation">@Component</span>
<span class="token annotation punctuation">@Primary</span>
<span class="token annotation punctuation">@AllArgsConstructor</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SwaggerResourceConfig</span> <span class="token keyword">implements</span> <span class="token class-name">SwaggerResourcesProvider</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">RouteLocator</span> routeLocator<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">GatewayProperties</span> gatewayProperties<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SwaggerResource</span><span class="token punctuation">&gt;</span></span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SwaggerResource</span><span class="token punctuation">&gt;</span></span> resources <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> routes <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//获取所有路由的ID</span>
        routeLocator<span class="token punctuation">.</span><span class="token function">getRoutes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span>route <span class="token operator">-&gt;</span> routes<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>route<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//过滤出配置文件中定义的路由-&gt;过滤出Path Route Predicate-&gt;根据路径拼接成api-docs路径-&gt;生成SwaggerResource</span>
        gatewayProperties<span class="token punctuation">.</span><span class="token function">getRoutes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>routeDefinition <span class="token operator">-&gt;</span> routes<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>routeDefinition<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>route <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            route<span class="token punctuation">.</span><span class="token function">getPredicates</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>predicateDefinition <span class="token operator">-&gt;</span> <span class="token punctuation">(</span><span class="token string">&quot;Path&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equalsIgnoreCase</span><span class="token punctuation">(</span>predicateDefinition<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>predicateDefinition <span class="token operator">-&gt;</span> resources<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token function">swaggerResource</span><span class="token punctuation">(</span>route<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                            predicateDefinition<span class="token punctuation">.</span><span class="token function">getArgs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">NameUtils</span><span class="token punctuation">.</span><span class="token constant">GENERATED_NAME_PREFIX</span> <span class="token operator">+</span> <span class="token string">&quot;0&quot;</span><span class="token punctuation">)</span>
                                    <span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&quot;**&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;v2/api-docs&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">return</span> resources<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token class-name">SwaggerResource</span> <span class="token function">swaggerResource</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token class-name">String</span> location<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;name:{},location:{}&quot;</span><span class="token punctuation">,</span> name<span class="token punctuation">,</span> location<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">SwaggerResource</span> swaggerResource <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SwaggerResource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        swaggerResource<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
        swaggerResource<span class="token punctuation">.</span><span class="token function">setLocation</span><span class="token punctuation">(</span>location<span class="token punctuation">)</span><span class="token punctuation">;</span>
        swaggerResource<span class="token punctuation">.</span><span class="token function">setSwaggerVersion</span><span class="token punctuation">(</span><span class="token string">&quot;2.0&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> swaggerResource<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>最后一步配置服务资源的转发配置：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 服务转发的请求处理
 */</span>
<span class="token annotation punctuation">@RestController</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SwaggerHandler</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Autowired</span><span class="token punctuation">(</span>required <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">SecurityConfiguration</span> securityConfiguration<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Autowired</span><span class="token punctuation">(</span>required <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">UiConfiguration</span> uiConfiguration<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">SwaggerResourcesProvider</span> swaggerResources<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">public</span> <span class="token class-name">SwaggerHandler</span><span class="token punctuation">(</span><span class="token class-name">SwaggerResourcesProvider</span> swaggerResources<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>swaggerResources <span class="token operator">=</span> swaggerResources<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token doc-comment comment">/**
     * Swagger资源配置，微服务中这各个服务的api-docs信息
     */</span>
    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/swagger-resources&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">Mono</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ResponseEntity</span><span class="token punctuation">&gt;</span></span> <span class="token function">swaggerResources</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">Mono</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ResponseEntity</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>swaggerResources<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">HttpStatus</span><span class="token punctuation">.</span><span class="token constant">OK</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token doc-comment comment">/**
     * Swagger安全配置，支持oauth和apiKey设置
     */</span>
    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/swagger-resources/configuration/security&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">Mono</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ResponseEntity</span><span class="token punctuation">&lt;</span><span class="token class-name">SecurityConfiguration</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token function">securityConfiguration</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">Mono</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ResponseEntity</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>
                <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">ofNullable</span><span class="token punctuation">(</span>securityConfiguration<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">orElse</span><span class="token punctuation">(</span><span class="token class-name">SecurityConfigurationBuilder</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">HttpStatus</span><span class="token punctuation">.</span><span class="token constant">OK</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * Swagger UI配置
     */</span>
    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/swagger-resources/configuration/ui&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">Mono</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ResponseEntity</span><span class="token punctuation">&lt;</span><span class="token class-name">UiConfiguration</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token function">uiConfiguration</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">Mono</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ResponseEntity</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>
                <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">ofNullable</span><span class="token punctuation">(</span>uiConfiguration<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">orElse</span><span class="token punctuation">(</span><span class="token class-name">UiConfigurationBuilder</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">HttpStatus</span><span class="token punctuation">.</span><span class="token constant">OK</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>创建swagger-user模块</li></ul><p>pom文件中引入knife4j的依赖：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code>&lt;dependency<span class="token punctuation">&gt;</span>
    &lt;groupId<span class="token punctuation">&gt;</span>com.github.xiaoymin&lt;/groupId<span class="token punctuation">&gt;</span>
    &lt;artifactId<span class="token punctuation">&gt;</span>knife4j<span class="token punctuation">-</span>micro<span class="token punctuation">-</span>spring<span class="token punctuation">-</span>boot<span class="token punctuation">-</span>starter&lt;/artifactId<span class="token punctuation">&gt;</span>
    &lt;version<span class="token punctuation">&gt;</span>2.0.4&lt;/version<span class="token punctuation">&gt;</span>
&lt;/dependency<span class="token punctuation">&gt;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>配置文件中把服务注册到nacos上：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">server</span><span class="token punctuation">:</span>
  <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">10600</span>

<span class="token key atrule">spring</span><span class="token punctuation">:</span>
  <span class="token key atrule">application</span><span class="token punctuation">:</span>
    <span class="token key atrule">name</span><span class="token punctuation">:</span> swagger<span class="token punctuation">-</span>user
  <span class="token key atrule">cloud</span><span class="token punctuation">:</span>
    <span class="token key atrule">nacos</span><span class="token punctuation">:</span>
      <span class="token key atrule">discovery</span><span class="token punctuation">:</span>
        <span class="token key atrule">server-addr</span><span class="token punctuation">:</span> 192.168.1.150<span class="token punctuation">:</span><span class="token number">8848</span>

<span class="token key atrule">management</span><span class="token punctuation">:</span>
  <span class="token key atrule">endpoints</span><span class="token punctuation">:</span>
    <span class="token key atrule">web</span><span class="token punctuation">:</span>
      <span class="token key atrule">exposure</span><span class="token punctuation">:</span>
        <span class="token key atrule">include</span><span class="token punctuation">:</span> <span class="token string">&quot;*&quot;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>添加swagger的配置：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Configuration</span>
<span class="token annotation punctuation">@EnableSwagger2</span>
<span class="token annotation punctuation">@EnableKnife4j</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Swagger2Config</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">Docket</span> <span class="token function">createRestApi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Docket</span><span class="token punctuation">(</span><span class="token class-name">DocumentationType</span><span class="token punctuation">.</span><span class="token constant">SWAGGER_2</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">apiInfo</span><span class="token punctuation">(</span><span class="token function">apiInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">apis</span><span class="token punctuation">(</span><span class="token class-name">RequestHandlerSelectors</span><span class="token punctuation">.</span><span class="token function">basePackage</span><span class="token punctuation">(</span><span class="token string">&quot;com.tianqingxiaozhu.swaggeruser.controller&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">paths</span><span class="token punctuation">(</span><span class="token class-name">PathSelectors</span><span class="token punctuation">.</span><span class="token function">any</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token class-name">ApiInfo</span> <span class="token function">apiInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ApiInfoBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">title</span><span class="token punctuation">(</span><span class="token string">&quot;swagger-user&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">description</span><span class="token punctuation">(</span><span class="token string">&quot;用户服务API文档&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">contact</span><span class="token punctuation">(</span><span class="token string">&quot;tianqingxiaozhu&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">version</span><span class="token punctuation">(</span><span class="token string">&quot;1.0&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>最后编写几个测试类即可。</p><ul><li>创建swagger-order模块</li></ul><p>swagger-order模块的搭建步骤与swagger-user模块的搭建步骤一致。不再赘述。</p><ul><li>测试</li></ul><p>分别启动swagger-user、swagger-order和gateway-swagger模块，浏览器中输入： <a href="http:_localhost:10800_doc">http://localhost:10800/doc.html</a> ，然后在服务选择框中选择想要展示的服务接口即可。</p><figure><img src="`+k+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_6-6-其他" tabindex="-1"><a class="header-anchor" href="#_6-6-其他" aria-hidden="true">#</a> 6.6. 其他</h4><p>由于篇幅原因，网关还有很多在实际生产环境下的应用场景没有实践，这里我们先罗列一下，后续有时间再进行分享。</p><ol><li>https的使用： 一般情况下服务都是放到内网里面的，相互之间的调用使用http即可完成，但是有些api接口需要暴露到外网，而暴露给外网，https更为安全，此时又想所有的服务通过网关进行暴露，此时就涉及到https到http的转化。</li><li>在实际生产环境下，实际的实践过程是通过把路由规则配置到配置中心来完成每一步骤的调用的。在springcloud-alibaba的框架中，我们可以把路由规则配置到nacos中，使用样例如上文所示。</li><li>网关需要扛住几乎所有应该到达后端微服务的流量，那么如何保证网关上游的微服务的安全呢？此时我们就需要Sentinel的帮助了。</li><li>灰度发布有很多种实践方案，其中有一种是基于网关的实现方案。</li><li>网关+Oauth2.0进行权限认证</li><li>网关的CROS方案。</li></ol><p>后续有时间会统一进行分享。</p><h3 id="_7-总结" tabindex="-1"><a class="header-anchor" href="#_7-总结" aria-hidden="true">#</a> 7. 总结</h3><ol><li>微服务的发展过程中势必会遇到很多问题，某种意义上讲，网关的出现最早是为了解决不同组织内巨量微服务相互隔离的问题，但在后续的发展过程中，网关又逐渐有了一些新的特性。</li><li>实践了网关的基本功能——服务转发、重写路由、路由规则可配置化，以及网关的一些生产实践——集成swagger的使用等。</li><li>列举了一些生产的应用场景，后续有时间再进行分享。</li></ol><h3 id="scg-性能优化" tabindex="-1"><a class="header-anchor" href="#scg-性能优化" aria-hidden="true">#</a> SCG 性能优化</h3>',31),S={href:"https://zhuanlan.zhihu.com/p/614977890",target:"_blank",rel:"noopener noreferrer"},I={href:"https://cloud.tencent.com/developer/article/1926643",target:"_blank",rel:"noopener noreferrer"},q={href:"https://blog.csdn.net/dongjia9/article/details/129624365",target:"_blank",rel:"noopener noreferrer"},R=n("li",null,"通过文章中的源码链接，找到其他文章，确认性能测试工具为 JMH 。猜测 测试结果章节中的图应该是在Excel中生成的；",-1),C=n("li",null,"可以下载文章中的这两个仓库进行研究；主要是性能优化及动态路由；",-1),A={href:"https://insights.thoughtworks.cn/performance-testing-tools/",target:"_blank",rel:"noopener noreferrer"},j={href:"https://xie.infoq.cn/article/d39fde1ce527ec2c3c6750c4c",target:"_blank",rel:"noopener noreferrer"},E={href:"https://xie.infoq.cn/article/bebacc42bad0712638ba3231e",target:"_blank",rel:"noopener noreferrer"},P={href:"https://xie.infoq.cn/article/0ae4f61ce6c67a651d94678a8",target:"_blank",rel:"noopener noreferrer"},G={href:"https://gitee.com/eblog/scgw-benchmark-all",target:"_blank",rel:"noopener noreferrer"},D={href:"https://heapdump.cn/article/4436607",target:"_blank",rel:"noopener noreferrer"},O={href:"https://juejin.cn/post/7057415444109459487",target:"_blank",rel:"noopener noreferrer"},N=n("ol",null,[n("li",null,"可以研究一下美团的cat监控平台")],-1),M={href:"https://blog.csdn.net/manzhizhen/article/details/115386684",target:"_blank",rel:"noopener noreferrer"},z={href:"https://blog.csdn.net/lizz861109/article/details/103972775",target:"_blank",rel:"noopener noreferrer"},L=n("ul",null,[n("li",null,"scg 原理"),n("li",null,"编写简单使用样例，之后进行压测"),n("li",null,"进行优化，之后再次进行压测"),n("li",null,"scg路由规则动态可配置化")],-1);function H(B,U){const a=l("ExternalLinkIcon");return c(),o("div",null,[g,n("p",null,[s("物理网关我们暂且不表，后端服务中常见的可以作为网关服务的组件，主要根据所使用的编程语言不同进行区分。常见的有Go的etcd，Java中的Zuul、Gateway等。这里我们不再详细描述技术选型，有兴趣的可以查阅《"),n("a",m,[s("你真的会做技术选型吗？"),t(a)]),s("》。")]),b,n("p",null,[s("浏览器中输入： "),n("a",y,[s("http://localhost:15000?green"),t(a)]),s(" ，点击回车后，浏览器会跳转到百度网站，")]),h,n("p",null,[s("网关根据断言的不同以及过滤器的不同，通过组合使用来适用不同的应用场景。有兴趣的读者可以阅读"),n("a",f,[s("官方文档"),t(a)]),s("动手实践一下。")]),w,n("p",null,[s("要想把单个微服务的API文档聚合到一起，最主要的任务是要解决不同微服务的路由地址的转发不一致问题。我们这里使用"),n("a",_,[s("Knife4j"),t(a)]),s("。")]),x,n("ol",null,[n("li",null,[n("a",S,[s("SpringCloud 网关组件 Gateway 原理深度解析"),t(a)])]),n("li",null,[n("a",I,[s("spring-cloud gateway 网关调优"),t(a)])]),n("li",null,[n("a",q,[s("SpringCloud Gateway 路由转发性能优化"),t(a)]),n("ol",null,[R,C,n("li",null,[n("a",A,[s("几种性能测试工具的总结"),t(a)])]),n("li",null,[n("a",j,[s("SpringCloud Gateway 路由数量对性能的影响研究"),t(a)])]),n("li",null,[n("a",E,[s("SpringCloud Gateway 路由转发性能优化"),t(a)])]),n("li",null,[n("a",P,[s("SpringCloud Gateway 动态路由"),t(a)])]),n("li",null,[n("a",G,[s("https://gitee.com/eblog/scgw-benchmark-all"),t(a)])])])]),n("li",null,[n("a",D,[s("CPU性能优化干货总结"),t(a)])]),n("li",null,[n("a",O,[s("大厂里一直讲的p99,p95到底是什么？"),t(a)]),N]),n("li",null,[n("a",M,[s("Spring Cloud Gateway之踩坑日记"),t(a)])]),n("li",null,[n("a",z,[s("Spring Cloud Gateway压测(wrk、k8s、nginx）"),t(a)])])]),L])}const T=p(v,[["render",H],["__file","ch06-gateway.html.vue"]]);export{T as default};
